{
  "permissions": {
    "allow": [
      "Bash(npx create-next-app:*)",
      "Bash(npx create-next-app@latest . --typescript --tailwind --app --no-src-dir --import-alias \"@/*\" --use-npm --skip-install)",
      "Bash(npm install)",
      "Bash(firebase init:*)",
      "Bash(npm install firebase@10.12.0 @google/generative-ai@0.7.1 stripe@14.25.0 zod@3.23.0 react-hot-toast@2.4.1 lucide-react@0.390.0 class-variance-authority clsx tailwind-merge)",
      "Bash(npm install:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npm run build:*)",
      "Bash(git reset:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git rm:*)",
      "Bash(test:*)",
      "Bash(npx shadcn:*)",
      "Bash(firebase emulators:start:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "Bash(npm run dev:*)",
      "Bash(firebase functions:config:set:*)",
      "Bash(cmd //c \"taskkill /F /PID 5276\")",
      "Bash(cmd //c \"taskkill /F /PID 34576\")",
      "Bash(cmd //c \"taskkill /F /PID 27284\")",
      "Bash(awk:*)",
      "Bash(cmd //c \"taskkill /F /PID 22664 /T 2>nul & taskkill /F /PID 22768 /T 2>nul & echo Done\")",
      "Bash(cmd //c \"taskkill /F /PID 18056 /T 2>nul & taskkill /F /PID 18324 /T 2>nul & taskkill /F /PID 21920 /T 2>nul & echo Done\")",
      "Bash(cmd //c \"taskkill /F /PID 13460 /T 2>nul & taskkill /F /PID 21368 /T 2>nul & taskkill /F /PID 26660 /T 2>nul & echo Done\")",
      "Bash(cmd //c \"taskkill /F /PID 12908 /T & taskkill /F /PID 20872 /T & taskkill /F /PID 26200 /T\")",
      "Bash(cmd //c \"taskkill /F /IM node.exe /FI \"\"WINDOWTITLE eq firebase*\"\" 2>nul || taskkill /F /IM java.exe /FI \"\"WINDOWTITLE eq firebase*\"\" 2>nul || echo No Firebase processes found\")",
      "Bash(cmd //c \"taskkill /F /PID 23476 /T & taskkill /F /PID 29240 /T & taskkill /F /PID 21444 /T\")",
      "Bash(xargs:*)",
      "Bash(npx shadcn@latest add:*)",
      "Bash(npx tsc:*)",
      "Bash(cat:*)",
      "Bash(tree:*)",
      "Bash(firebase --version:*)",
      "Bash(firebase use:*)",
      "Bash(firebase login:*)",
      "Bash(firebase deploy:*)",
      "Bash(gcloud projects add-iam-policy-binding:*)",
      "Bash(firebase functions:delete:*)",
      "Bash(gcloud secrets list:*)",
      "Bash(firebase apphosting:secrets:grantaccess:*)",
      "Bash(firebase apphosting:backends:list:*)",
      "Bash(firebase functions:config:get:*)",
      "Bash(gcloud secrets create:*)",
      "Bash(gcloud secrets versions add:*)",
      "Bash(git push)",
      "Bash(firebase apphosting:rollouts:create:*)",
      "Bash(firebase apphosting:rollouts:list:*)",
      "Bash(find:*)",
      "Bash(where:*)",
      "Bash(echo:*)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" secrets create FIREBASE_CLIENT_CONFIG --data-file=- --project=echoscribe-test)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" auth login)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" secrets create FIREBASE_CLIENT_CONFIG --data-file=\"d:\\Projects\\EchoScribe\\temp-firebase-config.json\" --project=echoscribe-test)",
      "Bash(del \"d:\\Projects\\EchoScribe\\temp-firebase-config.json\")",
      "Bash(dir /b \"d:\\Projects\\EchoScribe\\.env*\")",
      "Bash(firebase functions:list:*)",
      "Bash(firebase functions:log:*)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" projects add-iam-policy-binding echoscribe-test --member=\"serviceAccount:436441931185-compute@developer.gserviceaccount.com\" --role=\"roles/datastore.user\")",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" secrets add-iam-policy-binding GEMINI_API_KEY --member=\"serviceAccount:436441931185-compute@developer.gserviceaccount.com\" --role=\"roles/secretmanager.secretAccessor\" --project=echoscribe-test)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" run services describe processpodcasttask --region=europe-west1 --project=echoscribe-test --format=\"json\")",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" secrets versions access latest --secret=GEMINI_API_KEY --project=echoscribe-test)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" run services describe processpodcasttask --region=europe-west1 --project=echoscribe-test --format=json)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" logging read \"resource.type=cloud_function AND resource.labels.function_name=onPodcastUploaded AND timestamp>=\"\"2025-10-27T08:54:00Z\"\"\" --limit=50 --format=json --project=echoscribe-test)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" services list --enabled --project=echoscribe-test)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" projects add-iam-policy-binding echoscribe-test --member=\"serviceAccount:436441931185-compute@developer.gserviceaccount.com\" --role=\"roles/cloudtasks.enqueuer\")",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" projects add-iam-policy-binding echoscribe-test --member=\"serviceAccount:436441931185-compute@developer.gserviceaccount.com\" --role=\"roles/cloudtasks.enqueuer\" --condition=None)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" projects add-iam-policy-binding echoscribe-test --member=\"serviceAccount:436441931185-compute@developer.gserviceaccount.com\" --role=\"roles/cloudtasks.taskRunner\" --condition=None)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" tasks queues list --project=echoscribe-test --location=europe-west1)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" tasks queues describe processPodcastTask --location=europe-west1 --project=echoscribe-test)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" logging read \"resource.type=cloud_function AND resource.labels.function_name=onPodcastUploaded AND severity>=ERROR AND timestamp>=\"\"2025-10-27T09:28:00Z\"\"\" --limit=50 --format=json --project=echoscribe-test)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" run services describe onpodcastuploaded --region=europe-west1 --project=echoscribe-test --format=json)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" projects get-iam-policy echoscribe-test --flatten=\"bindings[].members\" --filter=\"bindings.members:436441931185-compute@developer.gserviceaccount.com\" --format=\"table(bindings.role)\")",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" tasks queues describe processPodcastTask --location=europe-west1 --project=echoscribe-test --format=\"value(name)\")",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" functions describe processPodcastTask --region=europe-west1 --gen2 --project=echoscribe-test --format=json)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" run services describe processpodcasttask --region=europe-west1 --project=echoscribe-test --format=\"value(status.url)\")",
      "Bash(del \"d:\\Projects\\EchoScribe\\.claude\\project-context.md\")",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" firestore databases describe --database=\"(default)\" --project=echoscribe-test --format=\"value(locationId)\")",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" functions list --project=echoscribe-test --format=\"table(name,region)\")",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" app describe --project=echoscribe-test --format=\"value(locationId)\")",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" functions describe processPodcastTask --gen2 --project=echoscribe-test --format=\"value(serviceConfig.service)\")",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" run services list --project=echoscribe-test --format=\"table(metadata.name,metadata.labels.goog-drz-cloudfunctions-location)\")",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" firestore databases describe --database=\"(default)\" --project=echoscribe-test --format=\"get(locationId)\")",
      "Bash(del \"d:\\Projects\\EchoScribe\\middleware.ts\")",
      "Bash(dir:*)",
      "Bash(firebase functions:secrets:access:*)",
      "Bash(gcloud secrets versions access:*)",
      "Bash(git log:*)",
      "Bash(node:*)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" secrets versions add STRIPE_SECRET_KEY --data-file=- --project=echoscribe-test)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" secrets versions access latest --secret=STRIPE_WEBHOOK_SECRET --project=echoscribe-test)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" secrets list --project=echoscribe-test --filter=\"name:STRIPE_PRICE\" --format=\"value(name)\")",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" secrets versions add STRIPE_PRICE_ID_STARTER_MONTHLY --data-file=- --project=echoscribe-test)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" secrets versions add STRIPE_PRICE_ID_PROFESSIONAL_MONTHLY --data-file=- --project=echoscribe-test)",
      "Bash(\"C:\\Users\\DElls\\AppData\\Local\\Google\\Cloud SDK\\google-cloud-sdk\\bin\\gcloud.cmd\" secrets versions add STRIPE_PRICE_ID_BUSINESS_MONTHLY --data-file=- --project=echoscribe-test)"
    ],
    "deny": [],
    "ask": []
  }
}
